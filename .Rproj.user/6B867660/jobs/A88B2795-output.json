[1,"==> quarto preview Quarto.qmd --to html --no-watch-inputs --no-browse\n\n"]
[1,"\u001B[1mpandoc \u001B[22m\n  to: html\n  output-file: Quarto.html\n  standalone: true\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  \n\u001B[1mmetadata\u001B[22m\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  title: Uganda Mobile Money Tax Estimator\n  author: Your Name/Organization\n  theme: minty\n  \n"]
[1,"Output created: Quarto.html\n\n\u001B[32mWatching files for changes\u001B[39m\n\u001B[32mBrowse at \u001B[39m\u001B[4m\u001B[32mhttp://localhost:7665/\u001B[39m\u001B[24m\n"]
[1,"\u001B[91mERROR: Fatal: OJS cell starting on line 21 is empty. OJS cells require at least one declaration.\n\nStack trace:\n    at handleOJSCell (file:///Applications/quarto/bin/quarto.js:83259:27)\n    at eventLoopTick (ext:core/01_core.js:175:7)\n    at async ojsCompile (file:///Applications/quarto/bin/quarto.js:83298:13)\n    at async ojsExecuteResult (file:///Applications/quarto/bin/quarto.js:83434:60)\n    at async file:///Applications/quarto/bin/quarto.js:85956:80\n    at async withTimingAsync (file:///Applications/quarto/bin/quarto.js:16879:25)\n    at async renderFileInternal (file:///Applications/quarto/bin/quarto.js:85948:17)\n    at async renderFiles (file:///Applications/quarto/bin/quarto.js:85793:17)\n    at async render (file:///Applications/quarto/bin/quarto.js:90695:21)\n    at async renderForPreview (file:///Applications/quarto/bin/quarto.js:91722:26)\u001B[39m\n"]
[1,"\u001B[1mpandoc \u001B[22m\n  to: html\n  output-file: Quarto.html\n  standalone: true\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  \n\u001B[1mmetadata\u001B[22m\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  title: Recurring‑Savings Visualiser\n  theme: minty\n  \n"]
[1,"Output created: Quarto.html\n\n\u001B[32mWatching files for changes\u001B[39m\n"]
[1,"\u001B[1mpandoc \u001B[22m\n  to: html\n  output-file: Quarto.html\n  standalone: true\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  \n\u001B[1mmetadata\u001B[22m\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  title: Recurring‑Savings Visualiser\n  theme: minty\n  \n"]
[1,"Output created: Quarto.html\n\n\u001B[32mWatching files for changes\u001B[39m\n"]
[1,"\u001B[31m  /apple-touch-icon.png (404: Not Found)\u001B[39m\n"]
[1,"\u001B[1mpandoc \u001B[22m\n  to: html\n  output-file: Quarto.html\n  standalone: true\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  \n\u001B[1mmetadata\u001B[22m\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  title: 'MM Tax Estimator '\n  theme: minty\n  \n"]
[1,"Output created: Quarto.html\n\n\u001B[32mWatching files for changes\u001B[39m\n"]
[1,"\u001B[1mpandoc \u001B[22m\n  to: html\n  output-file: Quarto.html\n  standalone: true\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  \n\u001B[1mmetadata\u001B[22m\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  title: 'MM Tax Estimator '\n  theme: minty\n  \n"]
[1,"Output created: Quarto.html\n\n\u001B[32mWatching files for changes\u001B[39m\n"]
[1,"\u001B[1mpandoc \u001B[22m\n  to: html\n  output-file: Quarto.html\n  standalone: true\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  \n\u001B[1mmetadata\u001B[22m\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  title: 'MM Tax Estimator '\n  theme: minty\n  \n"]
[1,"Output created: Quarto.html\n\n\u001B[32mWatching files for changes\u001B[39m\n"]
[1,"\u001B[1mpandoc \u001B[22m\n  to: html\n  output-file: Quarto.html\n  standalone: true\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  \n\u001B[1mmetadata\u001B[22m\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  title: 'MM Tax Estimator '\n  theme: minty\n  \n"]
[1,"Output created: Quarto.html\n\n\u001B[32mWatching files for changes\u001B[39m\n"]
[1,"\u001B[91mERROR: Fatal: OJS cell starting on line 18 is empty. OJS cells require at least one declaration.\n\nStack trace:\n    at handleOJSCell (file:///Applications/quarto/bin/quarto.js:83259:27)\n    at eventLoopTick (ext:core/01_core.js:175:7)\n    at async ojsCompile (file:///Applications/quarto/bin/quarto.js:83298:13)\n    at async ojsExecuteResult (file:///Applications/quarto/bin/quarto.js:83434:60)\n    at async file:///Applications/quarto/bin/quarto.js:85956:80\n    at async withTimingAsync (file:///Applications/quarto/bin/quarto.js:16879:25)\n    at async renderFileInternal (file:///Applications/quarto/bin/quarto.js:85948:17)\n    at async renderFiles (file:///Applications/quarto/bin/quarto.js:85793:17)\n    at async render (file:///Applications/quarto/bin/quarto.js:90695:21)\n    at async renderForPreview (file:///Applications/quarto/bin/quarto.js:91722:26)\u001B[39m\n"]
[1,"\u001B[91mERROR: OJS parsing failed on line 43, column 26\nSyntaxError: Unexpected token\n----- OJS Source:\n// — User‑driven inputs —\nconst expense_val_monthly = Number(expense);\n^\nconst momo_share_of_spend_pct = Number(momo_pct_spend) / 100;\nconst total_mobile_money_spend_monthly = expense_val_monthly * momo_share_of_spend_pct;\n// — INTERNALIZED Transaction Behavior Assumptions (for a typical middle-income user) —\nconst AVG_DAILY_TOTAL_TRANSACTIONS = 5;         // Assumed average total daily MM transactions\nconst PERC_DAILY_TXNS_ARE_WITHDRAWALS = 0.60; // Assumed 60% of daily *transactions* are withdrawals\nconst WITHDRAW_SHARE_OF_TOTAL_MM_VALUE = 0.70; // Assumed 70% of total MM *value* is eventually withdrawn\n// — Core Tax & Fee Rate Assumptions —\nconst WITHDRAWAL_LEVY_RATE = 0.005;      // 0.5% levy on the value of cash withdrawals\nconst EXCISE_DUTY_ON_FEE_RATE = 0.15;    // 15% excise duty on operator transaction fees\nconst VAT_ON_FEE_PLUS_EXCISE_RATE = 0.18; // 18% VAT on (operator fee + excise duty on that fee)\nconst DAYS_PER_MONTH = 30;               // Standard assumption for monthly calculations\n// — Operator Fee Parameters (Simplified Average for MTN/Airtel) —\n// For Payments (P2P Send, Bill Pay etc.)\nconst PAYMENT_FEE_PROPORTIONAL_RATE = 0.01; // 1% proportional fee for payments\nconst PAYMENT_MIN_FEE_UGX = 500;            // UGX minimum fee for payment transactions\n// --- Transaction Counts (based on internalized assumptions) ---\nconst num_daily_withdrawal_txns = AVG_DAILY_TOTAL_TRANSACTIONS * PERC_DAILY_TXNS_ARE_WITHDRAWALS;\nconst num_daily_payment_txns = AVG_DAILY_TOTAL_TRANSACTIONS * (1 - PERC_DAILY_TXNS_ARE_WITHDRAWALS);\nconst num_monthly_withdrawal_txns = Math.round(num_daily_withdrawal_txns * DAYS_PER_MONTH);\nconst num_monthly_payment_txns = Math.round(num_daily_payment_txns * DAYS_PER_MONTH);\n// --- Value Allocation for Transactions (based on internalized assumptions) ---\n// Total value withdrawn from mobile money accounts per month\nconst total_value_withdrawn_monthly = total_mobile_money_spend_monthly * WITHDRAW_SHARE_OF_TOTAL_MM_VALUE;\n// Total value used for payments (P2P, bills) from mobile money accounts per month\nconst total_value_payments_monthly = total_mobile_money_spend_monthly * (1 - WITHDRAW_SHARE_OF_TOTAL_MM_VALUE);\n// Average value per withdrawal transaction\nconst avg_withdrawal_txn_value = num_monthly_withdrawal_txns > 0 ? total_value_withdrawn_monthly / num_monthly_withdrawal_txns : 0;\n// Average value per payment transaction\nconst avg_payment_txn_value = num_monthly_payment_txns > 0 ? total_value_payments_monthly / num_monthly_payment_txns : 0;\n// --- Fee Calculation Functions (Simplified Tiered Model) ---\nfunction get_payment_operator_fee(txn_value) {\n  if (txn_value <= 0) return 0;\n  // Operator fee for a single payment transaction\n  return Math.max(txn_value * PAYMENT_FEE_PROPORTIONAL_RATE, PAYMENT_MIN_FEE_UGX);\n}\nfunction get_withdrawal_operator_fee(txn_value) {\n  if (txn_value <= 0) return 0;\n  // Operator fee for a single withdrawal transaction (Simplified Average Tiered Fees - UGX)\n  // These tiers are illustrative and based on general MTN/Airtel structures.\n  if (txn_value <= 2500) return 300;\n  if (txn_value <= 5000) return 500;\n  if (txn_value <= 15000) return 880;\n  if (txn_value <= 30000) return 1210;\n  if (txn_value <= 60000) return 1880;\n  if (txn_value <= 125000) return 2000;\n  if (txn_value <= 250000) return 3600;\n  if (txn_value <= 500000) return 7000;\n  if (txn_value <= 1000000) return 12500;\n  if (txn_value <= 2000000) return 15000;\n  if (txn_value <= 4000000) return 18000;\n  return 20000; // Max fee example\n}\n// --- Calculate Total Monthly Operator Fees ---\nlet total_monthly_payment_operator_fees = 0;\nif (num_monthly_payment_txns > 0 && avg_payment_txn_value > 0) {\n  total_monthly_payment_operator_fees = num_monthly_payment_txns * get_payment_operator_fee(avg_payment_txn_value);\n}\nlet total_monthly_withdrawal_operator_fees = 0;\nif (num_monthly_withdrawal_txns > 0 && avg_withdrawal_txn_value > 0) {\n  total_monthly_withdrawal_operator_fees = num_monthly_withdrawal_txns * get_withdrawal_operator_fee(avg_withdrawal_txn_value);\n}\nconst total_monthly_all_operator_fees = total_monthly_payment_operator_fees + total_monthly_withdrawal_operator_fees;\n// — Tax Maths —\nconst tax_levy_on_withdrawal_value = total_value_withdrawn_monthly * WITHDRAWAL_LEVY_RATE;\nconst tax_excise_on_operator_fees = total_monthly_all_operator_fees * EXCISE_DUTY_ON_FEE_RATE;\nconst vat_base_for_fees = total_monthly_all_operator_fees + tax_excise_on_operator_fees;\nconst tax_vat_on_operator_fees = vat_base_for_fees * VAT_ON_FEE_PLUS_EXCISE_RATE;\n// --- Total Taxes ---\nconst total_monthly_tax_estimate = tax_levy_on_withdrawal_value + tax_excise_on_operator_fees + tax_vat_on_operator_fees;\nconst total_annual_tax_estimate = total_monthly_tax_estimate * 12;\n// --- Data for Display ---\nconst display_total_mobile_spend = total_mobile_money_spend_monthly;\nconst display_monthly_tax = total_monthly_tax_estimate;\nconst display_annual_tax = total_annual_tax_estimate;\nconst tax_components_breakdown = [\n  {Component: \"Withdrawal Levy (0.5% on Value Withdrawn)\", Monthly: tax_levy_on_withdrawal_value},\n  {Component: \"Excise on Operator Fees (15%)\", Monthly: tax_excise_on_operator_fees},\n  {Component: \"VAT on Operator Fees (18%)\", Monthly: tax_vat_on_operator_fees},\n  {Component: \"Total Estimated Tax\", Monthly: total_monthly_tax_estimate}\n];\n// For detailed tooltips or an optional advanced section\nconst internal_assumptions_summary = {\n  avg_daily_txns: AVG_DAILY_TOTAL_TRANSACTIONS,\n  perc_txns_withdrawals: PERC_DAILY_TXNS_ARE_WITHDRAWALS * 100,\n  perc_value_withdrawn: WITHDRAW_SHARE_OF_TOTAL_MM_VALUE * 100,\n  num_monthly_withdrawals: num_monthly_withdrawal_txns,\n  avg_withdrawal_val: avg_withdrawal_txn_value,\n  num_monthly_payments: num_monthly_payment_txns,\n  avg_payment_val: avg_payment_txn_value,\n  total_operator_fees: total_monthly_all_operator_fees\n};\n-----\u001B[39m\n\u001B[91mERROR: OJS parsing failed on line 193, column 22\nSyntaxError: Unexpected token\n----- OJS Source:\nInputs.table(tax_components_breakdown.filter(d => d.Component !== \"Total Estimated Tax\"), { // Exclude total from this table as it's in the chart\n  columns: [\"Component\", \"Monthly\"],\n  header: {\n    Component: \"Tax Component\",\n    Monthly: \"Estimated Monthly Amount (UGX)\"\n  },\n  format: { Monthly: v => v.toLocaleString(undefined,{maximumFractionDigits:0}) },\n  width: { Component: \"70%\", Monthly: \"30%\" }\n})\n```{ojs}\nPlot.plot({\n  title: \"Monthly Tax Components\",\n  x: {axis: null}, // Hide x-axis labels for components if too cluttered, or use label: \"Tax Component\"\n  y: {label: \"Estimated Monthly Tax (UGX)\", grid: true},\n  marks: [\n    Plot.barY(tax_components_breakdown.filter(d => d.Component !== \"Total Estimated Tax\"), { // Plot individual components\n        x: \"Component\", \n        y: \"Monthly\", \n        fill: \"Component\", // Color by component\n        title: d => `${d.Component}: UGX ${d.Monthly.toLocaleString(undefined,{maximumFractionDigits:0})}` // Tooltip\n                     ^\n    }),\n    Plot.text(tax_components_breakdown.filter(d => d.Component !== \"Total Estimated Tax\"), {\n        x: \"Component\", \n        y: \"Monthly\", \n        text: d => d.Monthly.toLocaleString(undefined,{maximumFractionDigits:0}), \n        dy: -8, \n        fill:\"black\", \n        fontSize: 10\n    }),\n    Plot.ruleY([0])\n  ],\n  color: {legend: true, scheme:\"tableau10\"}, // Add a legend for colors\n  width: 680,\n  marginLeft: 70, // Adjust margin if y-axis labels are long\n  height: 400\n})\n-----\u001B[39m\n"]
[1,"\u001B[1mpandoc \u001B[22m\n  to: html\n  output-file: Quarto.html\n  standalone: true\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  \n\u001B[1mmetadata\u001B[22m\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  title: MM Tax Estimator (Simplified)\n  author: Your Name/Organization\n  theme: minty\n  \n"]
[1,"Output created: Quarto.html\n\n\u001B[32mWatching files for changes\u001B[39m\n"]
[1,"\u001B[91mERROR: OJS parsing failed on line 44, column 1\nSyntaxError: Unexpected token\n----- OJS Source:\n// — User‑driven inputs —\nconst expense_val           = Number(expense);\n^\nconst momo_share            = Number(momo_pct) / 100;            // proportion via MM\nconst mobile_spend          = expense_val * momo_share;          // value through MM per month\n// — Internalised behaviour (typical middle‑income user) —\nconst AVG_DAILY_TXNS                = 5;     // total MM transactions per day\nconst PERC_TXNS_WITHDRAWALS         = 0.60;  // 60 % of txns are withdrawals\nconst WITHDRAW_VALUE_SHARE          = 0.70;  // 70 % of MM **value** ultimately withdrawn\nconst DAYS_PER_MONTH                = 30;\n// — Core tax & fee parameters —\nconst WITHDRAWAL_LEVY_RATE          = 0.005; // 0.5 % on cash‑out value\nconst EXCISE_DUTY_RATE              = 0.15;  // 15 % on operator fees\nconst VAT_RATE                      = 0.18;  // 18 % on (fee + excise)\n// — Operator fee parameters —\nconst PAYMENT_FEE_RATE              = 0.01;  // 1 % for payments\nconst PAYMENT_MIN_FEE               = 500;   // UGX minimum for payments\n// — Derived transaction counts —\nconst daily_withdraw_txns  = AVG_DAILY_TXNS * PERC_TXNS_WITHDRAWALS;\nconst daily_payment_txns   = AVG_DAILY_TXNS * (1 - PERC_TXNS_WITHDRAWALS);\nconst monthly_withdraw_txns = Math.round(daily_withdraw_txns * DAYS_PER_MONTH);\nconst monthly_payment_txns  = Math.round(daily_payment_txns * DAYS_PER_MONTH);\n// — Split monthly value between withdrawals and payments —\nconst total_withdraw_value = mobile_spend * WITHDRAW_VALUE_SHARE;\nconst total_payment_value  = mobile_spend * (1 - WITHDRAW_VALUE_SHARE);\nconst avg_withdraw_val = monthly_withdraw_txns ? total_withdraw_value / monthly_withdraw_txns : 0;\nconst avg_payment_val  = monthly_payment_txns  ? total_payment_value  / monthly_payment_txns  : 0;\n// — Fee functions —\nfunction payment_fee(val){\n  if (val <= 0) return 0;\n  return Math.max(val * PAYMENT_FEE_RATE, PAYMENT_MIN_FEE);\n}\nfunction withdrawal_fee(val){\n  if (val <= 0) return 0;\n  if (val <=   2500) return  300;\n  if (val <=   5000) return  500;\n  if (val <=  15000) return  880;\n  if (val <=  30000) return 1210;\n  if (val <=  60000) return 1880;\n  if (val <= 125000) return 2000;\n  if (val <= 250000) return 3600;\n  if (val <= 500000) return 7000;\n  if (val <=1000000) return 12500;\n  if (val <=2000000) return 15000;\n  if (val <=4000000) return 18000;\n  return 20000; // max tier example\n}\n// — Operator fees —\nconst total_payment_fees   = monthly_payment_txns  * payment_fee(avg_payment_val);\nconst total_withdraw_fees  = monthly_withdraw_txns * withdrawal_fee(avg_withdraw_val);\nconst total_operator_fees  = total_payment_fees + total_withdraw_fees;\n// — Taxes —\nconst levy_withdraw  = total_withdraw_value * WITHDRAWAL_LEVY_RATE;\nconst excise_on_fees = total_operator_fees  * EXCISE_DUTY_RATE;\nconst vat_on_fees    = (total_operator_fees + excise_on_fees) * VAT_RATE;\nconst monthly_tax = levy_withdraw + excise_on_fees + vat_on_fees;\nconst annual_tax  = monthly_tax * 12;\n-----\u001B[39m\n"]
[1,"\u001B[1mpandoc \u001B[22m\n  to: html\n  output-file: Quarto.html\n  standalone: true\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  \n\u001B[1mmetadata\u001B[22m\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  title: 'MM Tax Estimator '\n  theme: minty\n  \n"]
[1,"Output created: Quarto.html\n\n\u001B[32mWatching files for changes\u001B[39m\n"]
[1,"\u001B[91mERROR: OJS parsing failed on line 44, column 1\nSyntaxError: Unexpected token\n----- OJS Source:\n// — User‑driven inputs —\nconst expense_val           = Number(expense);\n^\nconst momo_share            = Number(momo_pct) / 100;            // proportion via MM\nconst mobile_spend          = expense_val * momo_share;          // value through MM per month\n// — Internalised behaviour (typical middle‑income user) —\nconst AVG_DAILY_TXNS                = 5;     // total MM transactions per day\nconst PERC_TXNS_WITHDRAWALS         = 0.60;  // 60 % of txns are withdrawals\nconst WITHDRAW_VALUE_SHARE          = 0.70;  // 70 % of MM **value** ultimately withdrawn\nconst DAYS_PER_MONTH                = 30;\n// — Core tax & fee parameters —\nconst WITHDRAWAL_LEVY_RATE          = 0.005; // 0.5 % on cash‑out value\nconst EXCISE_DUTY_RATE              = 0.15;  // 15 % on operator fees\nconst VAT_RATE                      = 0.18;  // 18 % on (fee + excise)\n// — Operator fee parameters —\nconst PAYMENT_FEE_RATE              = 0.01;  // 1 % for payments\nconst PAYMENT_MIN_FEE               = 500;   // UGX minimum for payments\n// — Derived transaction counts —\nconst daily_withdraw_txns  = AVG_DAILY_TXNS * PERC_TXNS_WITHDRAWALS;\nconst daily_payment_txns   = AVG_DAILY_TXNS * (1 - PERC_TXNS_WITHDRAWALS);\nconst monthly_withdraw_txns = Math.round(daily_withdraw_txns * DAYS_PER_MONTH);\nconst monthly_payment_txns  = Math.round(daily_payment_txns * DAYS_PER_MONTH);\n// — Split monthly value between withdrawals and payments —\nconst total_withdraw_value = mobile_spend * WITHDRAW_VALUE_SHARE;\nconst total_payment_value  = mobile_spend * (1 - WITHDRAW_VALUE_SHARE);\nconst avg_withdraw_val = monthly_withdraw_txns ? total_withdraw_value / monthly_withdraw_txns : 0;\nconst avg_payment_val  = monthly_payment_txns  ? total_payment_value  / monthly_payment_txns  : 0;\n// — Fee functions —\nfunction payment_fee(val){\n  if (val <= 0) return 0;\n  return Math.max(val * PAYMENT_FEE_RATE, PAYMENT_MIN_FEE);\n}\nfunction withdrawal_fee(val){\n  if (val <= 0) return 0;\n  if (val <=   2500) return  300;\n  if (val <=   5000) return  500;\n  if (val <=  15000) return  880;\n  if (val <=  30000) return 1210;\n  if (val <=  60000) return 1880;\n  if (val <= 125000) return 2000;\n  if (val <= 250000) return 3600;\n  if (val <= 500000) return 7000;\n  if (val <=1000000) return 12500;\n  if (val <=2000000) return 15000;\n  if (val <=4000000) return 18000;\n  return 20000; // max tier example\n}\n// — Operator fees —\nconst total_payment_fees   = monthly_payment_txns  * payment_fee(avg_payment_val);\nconst total_withdraw_fees  = monthly_withdraw_txns * withdrawal_fee(avg_withdraw_val);\nconst total_operator_fees  = total_payment_fees + total_withdraw_fees;\n// — Taxes —\nconst levy_withdraw  = total_withdraw_value * WITHDRAWAL_LEVY_RATE;\nconst excise_on_fee = total_operator_fees  * EXCISE_DUTY_RATE;\nconst vat_on_fee    = (total_operator_fees + excise_on_fee) * VAT_RATE;\nconst monthly_tax = levy_withdraw + excise_on_fee + vat_on_fee;\nconst annual_tax  = monthly_tax * 12;\n-----\u001B[39m\n"]
[1,"\u001B[1mpandoc \u001B[22m\n  to: html\n  output-file: Quarto.html\n  standalone: true\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  \n\u001B[1mmetadata\u001B[22m\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  title: 'MM Tax Estimator '\n  theme: minty\n  \n"]
[1,"Output created: Quarto.html\n\n\u001B[32mWatching files for changes\u001B[39m\n"]
[1,"\u001B[91mERROR: OJS parsing failed on line 55, column 1\nSyntaxError: Unexpected token\n----- OJS Source:\n// — User‑driven inputs —\nconst expense_val           = Number(expense);\n^\nconst momo_share            = Number(momo_pct) / 100;            // proportion via MM\nconst mobile_spend          = expense_val * momo_share;          // value through MM per month\n// — Internalised behaviour (typical middle‑income user) —\nconst AVG_DAILY_TXNS                = 5;     // total MM transactions per day\nconst PERC_TXNS_WITHDRAWALS         = 0.60;  // 60 % of txns are withdrawals\nconst WITHDRAW_VALUE_SHARE          = 0.70;  // 70 % of MM **value** ultimately withdrawn\nconst DAYS_PER_MONTH                = 30;\n// — Core tax & fee parameters —\nconst WITHDRAWAL_LEVY_RATE          = 0.005; // 0.5 % on cash‑out value\nconst EXCISE_DUTY_RATE              = 0.15;  // 15 % on operator fees\nconst VAT_RATE                      = 0.18;  // 18 % on (fee + excise)\n// — Operator fee parameters —\nconst PAYMENT_FEE_RATE              = 0.01;  // 1 % for payments\nconst PAYMENT_MIN_FEE               = 500;   // UGX minimum for payments\n// — Derived transaction counts —\nconst daily_withdraw_txns  = AVG_DAILY_TXNS * PERC_TXNS_WITHDRAWALS;\nconst daily_payment_txns   = AVG_DAILY_TXNS * (1 - PERC_TXNS_WITHDRAWALS);\nconst monthly_withdraw_txns = Math.round(daily_withdraw_txns * DAYS_PER_MONTH);\nconst monthly_payment_txns  = Math.round(daily_payment_txns * DAYS_PER_MONTH);\n// — Split monthly value between withdrawals and payments —\nconst total_withdraw_value = mobile_spend * WITHDRAW_VALUE_SHARE;\nconst total_payment_value  = mobile_spend * (1 - WITHDRAW_VALUE_SHARE);\nconst avg_withdraw_val = monthly_withdraw_txns ? total_withdraw_value / monthly_withdraw_txns : 0;\nconst avg_payment_val  = monthly_payment_txns  ? total_payment_value  / monthly_payment_txns  : 0;\n// — Fee functions —\nfunction payment_fee(val){\n  if (val <= 0) return 0;\n  return Math.max(val * PAYMENT_FEE_RATE, PAYMENT_MIN_FEE);\n}\nfunction withdrawal_fee(val){\n  if (val <= 0) return 0;\n  if (val <=   2500) return  300;\n  if (val <=   5000) return  500;\n  if (val <=  15000) return  880;\n  if (val <=  30000) return 1210;\n  if (val <=  60000) return 1880;\n  if (val <= 125000) return 2000;\n  if (val <= 250000) return 3600;\n  if (val <= 500000) return 7000;\n  if (val <=1000000) return 12500;\n  if (val <=2000000) return 15000;\n  if (val <=4000000) return 18000;\n  return 20000; // max tier example\n}\n// — Operator fees —\nconst total_payment_fees   = monthly_payment_txns  * payment_fee(avg_payment_val);\nconst total_withdraw_fees  = monthly_withdraw_txns * withdrawal_fee(avg_withdraw_val);\nconst total_operator_fees  = total_payment_fees + total_withdraw_fees;\n// — Taxes —\nconst levy_withdraw  = total_withdraw_value * WITHDRAWAL_LEVY_RATE;\nconst excise_on_fee = total_operator_fees  * EXCISE_DUTY_RATE;\nconst vat_on_fee    = (total_operator_fees + excise_on_fee) * VAT_RATE;\nconst monthly_tax = levy_withdraw + excise_on_fee + vat_on_fee;\nconst annual_tax  = monthly_tax * 12;\n-----\u001B[39m\n"]
[1,"\u001B[1mpandoc \u001B[22m\n  to: html\n  output-file: Quarto.html\n  standalone: true\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  \n\u001B[1mmetadata\u001B[22m\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  title: 'MM Tax Estimator '\n  theme: minty\n  \n"]
[1,"Output created: Quarto.html\n\n\u001B[32mWatching files for changes\u001B[39m\n"]
[1,"\u001B[91mERROR: OJS parsing failed on line 44, column 1\nSyntaxError: Unexpected token\n----- OJS Source:\n// — User‑driven inputs —\nconst expense_val           = Number(expense);\n^\nconst momo_share            = Number(momo_pct) / 100;            // proportion via MM\nconst mobile_spend          = expense_val * momo_share;          // value through MM per month\n// — Internalised behaviour (typical middle‑income user) —\nconst AVG_DAILY_TXNS                = 5;     // total MM transactions per day\nconst PERC_TXNS_WITHDRAWALS         = 0.60;  // 60 % of txns are withdrawals\nconst WITHDRAW_VALUE_SHARE          = 0.70;  // 70 % of MM **value** ultimately withdrawn\nconst DAYS_PER_MONTH                = 30;\n// — Core tax & fee parameters —\nconst WITHDRAWAL_LEVY_RATE          = 0.005; // 0.5 % on cash‑out value\nconst EXCISE_DUTY_RATE              = 0.15;  // 15 % on operator fees\nconst VAT_RATE                      = 0.18;  // 18 % on (fee + excise)\n// — Operator fee parameters —\nconst PAYMENT_FEE_RATE              = 0.01;  // 1 % for payments\nconst PAYMENT_MIN_FEE               = 500;   // UGX minimum for payments\n// — Derived transaction counts —\nconst daily_withdraw_txns  = AVG_DAILY_TXNS * PERC_TXNS_WITHDRAWALS;\nconst daily_payment_txns   = AVG_DAILY_TXNS * (1 - PERC_TXNS_WITHDRAWALS);\nconst monthly_withdraw_txns = Math.round(daily_withdraw_txns * DAYS_PER_MONTH);\nconst monthly_payment_txns  = Math.round(daily_payment_txns * DAYS_PER_MONTH);\n// — Split monthly value between withdrawals and payments —\nconst total_withdraw_value = mobile_spend * WITHDRAW_VALUE_SHARE;\nconst total_payment_value  = mobile_spend * (1 - WITHDRAW_VALUE_SHARE);\nconst avg_withdraw_val = monthly_withdraw_txns ? total_withdraw_value / monthly_withdraw_txns : 0;\nconst avg_payment_val  = monthly_payment_txns  ? total_payment_value  / monthly_payment_txns  : 0;\n// — Fee functions —\nfunction payment_fee(val){\n  if (val <= 0) return 0;\n  return Math.max(val * PAYMENT_FEE_RATE, PAYMENT_MIN_FEE);\n}\nfunction withdrawal_fee(val){\n  if (val <= 0) return 0;\n  if (val <=   2500) return  300;\n  if (val <=   5000) return  500;\n  if (val <=  15000) return  880;\n  if (val <=  30000) return 1210;\n  if (val <=  60000) return 1880;\n  if (val <= 125000) return 2000;\n  if (val <= 250000) return 3600;\n  if (val <= 500000) return 7000;\n  if (val <=1000000) return 12500;\n  if (val <=2000000) return 15000;\n  if (val <=4000000) return 18000;\n  return 20000; // max tier example\n}\n// — Operator fees —\nconst total_payment_fees   = monthly_payment_txns  * payment_fee(avg_payment_val);\nconst total_withdraw_fees  = monthly_withdraw_txns * withdrawal_fee(avg_withdraw_val);\nconst total_operator_fees  = total_payment_fees + total_withdraw_fees;\n// — Taxes —\nconst levy_withdraw  = total_withdraw_value * WITHDRAWAL_LEVY_RATE;\nconst excise_on_fee = total_operator_fees  * EXCISE_DUTY_RATE;\nconst vat_on_fee    = (total_operator_fees + excise_on_fee) * VAT_RATE;\nconst monthly_tax = levy_withdraw + excise_on_fee + vat_on_fee;\nconst annual_tax  = monthly_tax * 12;\n-----\u001B[39m\n"]
[1,"\u001B[1mpandoc \u001B[22m\n  to: html\n  output-file: Quarto.html\n  standalone: true\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  \n\u001B[1mmetadata\u001B[22m\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  title: 'MM Tax Estimator '\n  theme: minty\n  \n"]
[1,"Output created: Quarto.html\n\n\u001B[32mWatching files for changes\u001B[39m\n"]
[1,"\u001B[1mpandoc \u001B[22m\n  to: html\n  output-file: Quarto.html\n  standalone: true\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  \n\u001B[1mmetadata\u001B[22m\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  title: 'MM Tax Estimator '\n  theme: minty\n  \n"]
[1,"Output created: Quarto.html\n\n\u001B[32mWatching files for changes\u001B[39m\n"]
[1,"\u001B[1mpandoc \u001B[22m\n  to: html\n  output-file: Quarto.html\n  standalone: true\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  \n\u001B[1mmetadata\u001B[22m\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  title: 'MM Tax Estimator '\n  theme: minty\n  \n"]
[1,"Output created: Quarto.html\n\n\u001B[32mWatching files for changes\u001B[39m\n"]
[1,"\u001B[1mpandoc \u001B[22m\n  to: html\n  output-file: Quarto.html\n  standalone: true\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  \n\u001B[1mmetadata\u001B[22m\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  title: 'MM Tax Estimator '\n  theme: minty\n  \n"]
[1,"Output created: Quarto.html\n\n\u001B[32mWatching files for changes\u001B[39m\n"]
[1,"\u001B[1mpandoc \u001B[22m\n  to: html\n  output-file: Quarto.html\n  standalone: true\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  \n\u001B[1mmetadata\u001B[22m\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  title: 'MM Tax Estimator '\n  theme: minty\n  \n"]
[1,"Output created: Quarto.html\n\n\u001B[32mWatching files for changes\u001B[39m\n"]
